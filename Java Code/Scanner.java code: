package com.example.textrecognition;
import static android.Manifest.permission.CAMERA; import
androidx.appcompat.app.AppCompatActivity; import
androidx.core.app.ActivityCompat; import androidx.core.content.ContextCompat;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.Point;
import android.graphics.Rect;
import android.os.Bundle; import
android.provider.MediaStore;
import android.view. View; import
android. widget.Button; import
android.widget.ImageView; import
android. widget.TextView; import
android. widget.Toast;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.mlkit.vision.common.InputImage;
import com.google.mlkit.vision.text.Text;
import com.google.mlkit.vision.text.TextRecognition; import
com.google.mlkit.vision.text.TextRecognizer; import
com.google.mlkit.vision.text.latin.TextRecognizerOptions;

public class scannerActivity extends AppCompatActivity {
private ImageView captureIV;
private Button snapBtn, detectBtn;
private TextView resultTV;
private Bitmap imgBitmap;
static final int REQUEST_IMAGE_CAPTURE = 1;
@Override 
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_scanner);
captureIV = findViewById(R.id.idtvcapimg);
resultTV = findViewById(R.id.idtvdetectedText);
snapBtn = findViewById(R.id.idbtnsnap);
detectBtn = findViewById(R.id.idbtndetect);

detectBtn.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
detectText();
}
});
snapBtn.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
if(checkPermission()) {
captureImage();
} else {
requestPermission();
}
}
});
}
private boolean checkPermission() {
int cameraPermission = ContextCompat.checkSelfPermission(getApplicationContext(), CAMERA);
return cameraPermission == PackageManager.PERMISSION_GRANTED;
}

private void requestPermission() {
int PERMISSION_CODE = 200;
ActivityCompat.requestPermissionsthis, new String[]{CAMERA}, PERMISSION_CODE);
}

private void captureImage() {
Intent takePicture = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
if(takePicture.resolveActivity(getPackageManager()) != null) {
startActivityForResult(takePicture, REQUEST_IMAGE_CAPTURE);
}
}
@Override
public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions) {
super.onRequestPermissionsResult(requestCode, permissions);
if(grantResults.length > 0) {
PackageManager.PERMISSION_GRANTED;
if(cameraPermission) {
Toast.makeText(this, "Permission Granted...", Toast.LENGTH_SHORT).show();
captureImage();
}
} else

Toast.makeText(this, "Permission Denied", Toast.LENGTH_SHORT).show();
}
}
}
@Override 
protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if (requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK) {
        Bundle extras = data.getExtras();
        imgBitmap = (Bitmap) extras.get("data");
        captureIV.setImageBitmap(imgBitmap);
    }
}
private void detectText() {
    InputImage image = InputImage.fromBitmap(imgBitmap, 0);
    TextRecognizer recognizer = TextRecognition.getClient(TextRecognizerOptions.DEFAULT_OPTIONS);
    Task

result = recognizer.process(image).addOnSuccessListener(new OnSuccessListener() {
        @Override
public void onSuccess(Text text) {
            StringBuilder result = new StringBuilder();
            for (Text.TextBlock block : text.getTextBlocks()) {
                String blockText = block.getText();
                Point[] blockCornerPoints = block.getCornerPoints();
                Rect blockFrame = block.getBoundingBox();
                for (Text.Line line : block.getLines()) {
                    String lineText = line.getText();
                    Point[] lineCornerPoints = line.getCornerPoints();
                    Rect lineRect = line.getBoundingBox();
                    for (Text.Element element : line.getElements()) {
                        String elementText = element.getText();
                        result.append(elementText);
                    }
                    resultTV.setText(blockText);
                }
            }
        }
 }).addOnFailureListener(new OnFailureListener() {
        @Override
        public void onFailure(@NonNull Exception e) {
            Toast.makeText(scannerActivity.this, "Failed to detect text from image: " + e.getMessage(), Toast.LENGTH_SHORT).show();
        }
    });
}
